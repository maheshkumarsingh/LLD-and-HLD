@model IEnumerable<PersonResponseDTO>

@{
    ViewBag.Title = "Persons";
}
<form action="~/persons/index" method="get">

    <div class="box flex">
        <div class="flex-1">
            <select class="form-input" name="searchBy">
                @foreach (var field in ViewBag.SearchFields)
                {
                    if (field.Key == ViewBag.CurrentSearchBy)
                    {
                        <option value="@field.Key" selected="selected">@field.Value</option>
                    }
                    <option value="@field.Key">@field.Value</option>
                }
            </select>
        </div>

        <div class="flex-1">
            <input type="search" id="seach" class="form-input" placeholder="Search" name="searchString" value="@ViewBag.SeachString" />
        </div>

        <div class="flex-1">
            <button class="button button-blue-back">Search</button>
            &nbsp;&nbsp;
            <a href="~/persons/index">Clear All</a>
        </div>
    </div>
    <h1>Persons</h1>
    <a href="~/persons/create">Create Person</a>
    <table class="table w-100 mt">
        <thead>
            <tr>
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                    {"ColumnName", nameof(PersonResponseDTO.PersonName)},
                    {"DisplayName", "Person Name"},
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                    {"ColumnName", nameof(PersonResponseDTO.Email)},
                    {"DisplayName", "Email"},
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                    {"ColumnName", nameof(PersonResponseDTO.DOB)},
                    {"DisplayName", "Date of Birth"},
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                    {"ColumnName", nameof(PersonResponseDTO.Age)},
                    {"DisplayName", "Age"},
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                {"ColumnName", nameof(PersonResponseDTO.Gender)},
                {"DisplayName", "Gender"},
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                    {"ColumnName", nameof(PersonResponseDTO.CountryName)},
                    {"DisplayName", "Country Name"},
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                    {"ColumnName", nameof(PersonResponseDTO.Address)},
                    {"DisplayName", "Address"},
                })
                @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData)
                {
                    {"ColumnName", nameof(PersonResponseDTO.ReceiveNewsLetter)},
                    {"DisplayName", "ReceiveNewsLetter"},
                })
            </tr>
        </thead>
        <tbody>
            @foreach (PersonResponseDTO personResponseDTO in Model)
            {
                <tr>
                    <td style="width:15%">@personResponseDTO.PersonName</td>
                    <td style="width:20%">@personResponseDTO.Email</td>
                    <td style="width:13%">@personResponseDTO.DOB?.ToString("dd MM yyyy")</td>
                    <td style="width:9%">@personResponseDTO.Age</td>
                    <td style="width:9%">@personResponseDTO.Gender</td>
                    <td style="width:10%">@personResponseDTO.CountryName</td>
                    <td style="width:20%">@personResponseDTO.Address</td>
                    <td style="width:10%">@personResponseDTO.ReceiveNewsLetter</td>
                </tr>
            }
        </tbody>
    </table>
</form>